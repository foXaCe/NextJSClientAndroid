name: Build Android APK

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Permet de déclencher manuellement le build

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Create local.properties
      run: |
        echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
    
    - name: Create google-services.json
      env:
        GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      if: env.GOOGLE_SERVICES_JSON != ''
      run: |
        echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json
    
    - name: Clean project
      run: ./gradlew clean
    
    - name: Build Debug APK
      run: ./gradlew assembleDebug
    
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk
    
    - name: Build Release APK (unsigned)
      run: ./gradlew assembleRelease
    
    - name: Upload Release APK (unsigned)
      uses: actions/upload-artifact@v4
      with:
        name: app-release-unsigned
        path: app/build/outputs/apk/release/app-release-unsigned.apk
    
    # Build APK signé (optionnel - nécessite configuration des secrets)
    - name: Sign Release APK
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      if: env.KEYSTORE_BASE64 != ''
      run: |
        # Décoder le keystore depuis base64
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > my-release-key.keystore
        
        # Signer l'APK avec apksigner
        $ANDROID_SDK_ROOT/build-tools/34.0.0/apksigner sign \
          --ks my-release-key.keystore \
          --ks-pass pass:"${{ secrets.KEYSTORE_PASSWORD }}" \
          --ks-key-alias "${{ secrets.KEY_ALIAS }}" \
          --key-pass pass:"${{ secrets.KEY_PASSWORD }}" \
          --out app/build/outputs/apk/release/app-release-signed.apk \
          app/build/outputs/apk/release/app-release-unsigned.apk
        
        # Nettoyer le keystore
        rm my-release-key.keystore
    
    - name: Upload Signed Release APK
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      if: env.KEYSTORE_BASE64 != ''
      uses: actions/upload-artifact@v4
      with:
        name: app-release-signed
        path: app/build/outputs/apk/release/app-release-signed.apk
    
    # Créer une release GitHub (optionnel - seulement sur les tags)
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          app/build/outputs/apk/debug/app-debug.apk
          app/build/outputs/apk/release/app-release-*.apk
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}