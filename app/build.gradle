plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

// Apply Google Services plugin only if google-services.json exists
if (file('google-services.json').exists()) {
    apply plugin: 'com.google.gms.google-services'
}

// Version configuration like Lawnchair
final def buildCommit = providers.exec {
    commandLine('git', 'rev-parse', '--short=7', 'HEAD')
}.standardOutput.asText.get().trim()

final def getBuildNumber = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--count', 'HEAD'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    } catch (Exception e) {
        return 1
    }
}

final def ciBuild = System.getenv("CI") == "true"
final def ciRunNumber = System.getenv("GITHUB_RUN_NUMBER") ?: ""
final def buildNumber = getBuildNumber()
final def devReleaseName = ciBuild ? "Dev.(#${ciRunNumber})" : "Dev.(${buildCommit})"
final def version = "1"
final def versionDisplayName = "${version}.${devReleaseName}"

android {
    namespace 'com.nextjsclient.android'
    compileSdk 34

    defaultConfig {
        applicationId "com.nextjsclient.android"
        minSdk 24
        targetSdk 34
        
        // Lawnchair-style versioning
        versionCode buildNumber
        versionName versionDisplayName
        
        // BuildConfig fields like Lawnchair
        buildConfigField "String", "VERSION_DISPLAY_NAME", "\"${versionDisplayName}\""
        buildConfigField "String", "COMMIT_HASH", "\"${buildCommit}\""
        buildConfigField "int", "BUILD_NUMBER", "${buildNumber}"
        
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            // Use debug keystore
        }
        release {
            // Configuration for GitHub Actions
            if (System.getenv("KEYSTORE_BASE64")) {
                def keystorePath = "../nextjs-client-release.keystore"
                println "üîê GitHub Actions: Using keystore at: ${file(keystorePath).absolutePath}"
                println "üîê Keystore exists: ${file(keystorePath).exists()}"
                storeFile file(keystorePath)
                storePassword System.getenv("KEYSTORE_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS") 
                keyPassword System.getenv("KEY_PASSWORD")
            }
            // Local configuration (fallback)
            else if (file('../nextjs-client-release.keystore').exists()) {
                def keystorePropertiesFile = rootProject.file("keystore.properties")
                if (keystorePropertiesFile.exists()) {
                    def keystoreProperties = new Properties()
                    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                    storeFile file('../nextjs-client-release.keystore')
                    storePassword keystoreProperties['storePassword']
                    keyAlias 'nextjs-client'
                    keyPassword keystoreProperties['keyPassword']
                } else {
                    // Fallback pour √©viter les erreurs de build
                    storeFile file('../nextjs-client-release.keystore')
                    storePassword 'changeme'
                    keyAlias 'nextjs-client'
                    keyPassword 'changeme'
                }
            }
            // Use debug keystore as fallback to prevent build errors
            else {
                // Fallback vers le keystore debug pour assurer une signature valide
                storeFile file(System.getProperty("user.home") + "/.android/debug.keystore")
                storePassword 'android'
                keyAlias 'androiddebugkey'
                keyPassword 'android'
            }
        }
    }
    
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // Toujours appliquer la signature (avec keystore de production ou debug en fallback)
            signingConfig signingConfigs.release
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    
    kotlinOptions {
        jvmTarget = '17'
    }
    
    buildFeatures {
        viewBinding true
        buildConfig true
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.8.4'
    implementation 'androidx.navigation:navigation-ui-ktx:2.8.4'
    
    // Firebase
    implementation platform('com.google.firebase:firebase-bom:33.6.0')
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    
    // Architecture Components
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.8.7'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.7'
    implementation 'androidx.activity:activity-ktx:1.9.3'
    implementation 'androidx.fragment:fragment-ktx:1.8.5'
    
    // RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    
    // FlexboxLayout for multi-line layouts
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    
    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.7.3'
    
    // Image Loading
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    
    // Splash Screen
    implementation 'androidx.core:core-splashscreen:1.0.1'
    
    // HTTP requests for update checks
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    
    // Biometric authentication
    implementation 'androidx.biometric:biometric:1.1.0'
    
    // Pas de charts pour l'instant - simplifions
    
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}